{"version":3,"sources":["./src/app/pages/login/register/register.component.ts","./src/app/pages/login/register/register.component.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/login/login.component.ts","./src/app/pages/login/login/login.component.html"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["import { PageService } from './../../page.service';\nimport { LoginService } from './../login.service';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    user :USER;\n  constructor(public service:LoginService,public messageService:PageService,public dialogRef: MatDialogRef<RegisterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,) {\n    this.user = {\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"email\": \"\",\n      \"mobile\": \"\",\n      \"username\": \"\",\n      \"password\": \"\",\n      \"upgradeRequest\":this.data?.upgrade\n    }\n   }\n   register(){\n    this.service.register(this.user).subscribe(res=>{\n      this.messageService.success('User Registred.')\n    })\n   }\n\n  ngOnInit(): void {\n    console.log(this.data)\n\n  }\n\n}\n\nexport interface USER{\n  firstName:string;\n  lastName: string;\n  email: string;\n  mobile: string;\n  username:string;\n  password: string;\n  upgradeRequest:boolean\n}\n","<h2 mat-dialog-title>Register User</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"container-detail-course\">\n        <form class=\"example-form\">\n          <div class=\"flex-row\">\n            <div class=\"col-2\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label>First Name</mat-label>\n                <input matInput [(ngModel)]=\"user.firstName\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-2\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label>Last Name</mat-label>\n                <input matInput [(ngModel)]=\"user.lastName\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"flex-row\">\n            <div class=\"col-2\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\" >\n                <mat-label>Email</mat-label>\n                <input matInput [(ngModel)]=\"user.email\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-2\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label>Mobile</mat-label>\n                <input matInput [(ngModel)]=\"user.mobile\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"flex-row\">\n            <div class=\"col-2\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label>UserName</mat-label>\n                <input matInput [(ngModel)]=\"user.username\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-2\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" [(ngModel)]=\"user.password\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n\n          </div>\n        </form>\n\n\n      </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close (click)=\"register()\">Register</button>\n\n  <button mat-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst rout: Routes = [\n  { path: '', component: LoginComponent }\n]\n@NgModule({\n  declarations: [LoginComponent,RegisterComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatSelectModule,\n    RouterModule.forChild(rout)\n  ]\n})\nexport class LoginModule { }\n","import { PageService } from './../../page.service';\nimport { catchError } from 'rxjs/operators';\nimport { LoginService } from './../login.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { RegisterComponent } from '../register/register.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MOCKED } from 'src/app/mocked/const';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  password: string = undefined;\n  username: string = undefined;\n  helper = new JwtHelperService();\n  role = 'manager';\n\n  constructor(\n    private loginservice: LoginService,\n    private auth: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    public dialog: MatDialog,\n    public message: PageService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.auth.getLoaclStorage('token_VREDU')) {\n      if (this.auth.getLoaclStorage('role_vr') === 'manager') {\n        this.router.navigate(['Approve-courses/Approve-courses']);\n      } else if (this.auth.getLoaclStorage('role_vr') === 'owner') {\n        this.router.navigate(['Upload/Upload']);\n      } else {\n        this.router.navigate(['Courses/Courses']);\n      }\n    }\n  }\n  login() {\n    this.loginservice\n      .Login('management', this.password, this.username)\n      .subscribe(\n        (result) => {\n          // console.log(result);\n\n          console.log(result.data);\n          let decodedToken;\n          // if (result.data?.accessToken === MOCKED.manager_mocked_token) {\n          decodedToken = JSON.parse(result.data?.accessToken);\n          // } else {\n          // decodedToken = this.helper.decodeToken(result.data?.accessToken);\n          // }\n          decodedToken.role = this.role;\n          if (this.role === decodedToken?.role) {\n            this.auth.saveLoaclStorage(result.data); \n            localStorage.setItem('role_vr', decodedToken?.role);\n            console.log(decodedToken);\n            if (decodedToken?.role === 'manager') {\n              this.router.navigate(['Approve-courses/Approve-courses']);\n            } else if (decodedToken?.role === 'owner') {\n              this.router.navigate(['Upload/Upload']);\n            } else {\n              this.router.navigate(['Courses/Courses']);\n            }\n          } else {\n            this.message.e('You do not have access');\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n  openRegister() {\n    const dialogRef = this.dialog.open(RegisterComponent, {\n      width: '500px',\n      data: { upgrade: this.role === 'owner' ? true : false },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  handleChange(e) {\n    switch (e.target.name) {\n      case 'username':\n        this.username = e.target.value;\n        break;\n      case 'password':\n        this.password = e.target.value;\n        break;\n    }\n  }\n  changeRole(e) {\n    console.log(e);\n    this.role = e;\n  }\n}\n","<div class=\"login-holder flex-row align-items-center justify-content-center\">\n  <div class=\"login-form-holder\">\n    <div class=\"avatar-holder flex-row align-items-center justify-content-center\">\n      <img src=\"./assets/img/logoVR.png\" style=\"object-fit: revert; width: 60px;\" alt=\"\">\n    </div>\n    <div class=\"content-form\">\n      <mat-form-field class=\"select-role\" appearance=\"fill\">\n        <mat-label>Choose an Role</mat-label>\n        <mat-select [(ngModel)]=\"role\" (ngModelChange)=\"changeRole($event)\">\n          <mat-option value=\"manager\">Management Portal</mat-option>\n          <mat-option value=\"owner\">Partner Portal</mat-option>\n          <mat-option value=\"customer\">Client Portal</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div class=\"input-content-holder flex-row\">\n        <div class=\"icon-holder flex-row align-items-center justify-content-center\">\n          <img src=\"./assets/img/user-input.svg\" alt=\"\">\n        </div>\n        <div class=\"input-holder\">\n          <input type=\"text\" class=\"input-login\" placeholder=\"Username\" [(ngModel)]=\"username\">\n        </div>\n      </div>\n      <div class=\"input-content-holder flex-row\">\n        <div class=\"icon-holder flex-row align-items-center justify-content-center\">\n          <img src=\"./assets/img/lock-input.svg\" alt=\"\">\n        </div>\n        <div class=\"input-holder\">\n          <input type=\"password\" class=\"input-login\" [(ngModel)]=\"password\">\n        </div>\n      </div>\n      <div class=\"checkbox-holder flex-row\">\n        <div class=\"my-col-2\" align='start'>\n          <label class=\"container\">\n            <i style=\"position: relative; top: -3px; font-style: normal;\">Remember me</i>\n            <input type=\"checkbox\" checked=\"checked\">\n            <span class=\"checkmark\"></span>\n          </label>\n        </div>\n        <div class=\"my-col-2\" align='end'>\n          <button class=\"btn-forget-password\">Forget Password?</button>\n        </div>\n      </div>\n      <div class=\"btn-content-holder\">\n        <button (click)=\"login()\" class=\"w-100 btn-login\">Login</button>\n      </div>\n      <div class=\"btn-content-holder\" *ngIf=\"role==='owner'||role==='customer'\" >\n        <button class=\"w-100 btn-register\" (click)=\"openRegister()\">register</button>\n      </div>\n      <div class=\"checkbox-holder flex-row\">\n        <div class=\"text-empty\">Or login With</div>\n        <div class=\"icons-list flex-row\" align='end'>\n          <img src=\"./assets/icons&img/twwiter.svg\" alt=\"\">\n          <img src=\"./assets/icons&img/google.svg\" alt=\"\">\n          <img src=\"./assets/icons&img/facebook.svg\" alt=\"\">\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}