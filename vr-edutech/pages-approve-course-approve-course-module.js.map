{"version":3,"sources":["./src/app/pages/approve-course/components/dialogs/reject/reject.component.ts","./src/app/pages/approve-course/components/dialogs/reject/reject.component.html","./src/app/pages/approve-course/approve-course-routing.module.ts","./src/app/pages/approve-course/components/shared/video-player/video-player.component.ts","./src/app/pages/approve-course/components/shared/video-player/video-player.component.html","./src/app/pages/approve-course/approve-course.module.ts","./src/app/pages/approve-course/components/approve-courses/approve-courses.component.ts","./src/app/pages/approve-course/components/approve-courses/approve-courses.component.html"],"names":[],"mappings":"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","file":"pages-approve-course-approve-course-module.js","sourcesContent":["import { ApproveService } from './../../../approve.service';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-reject',\n  templateUrl: './reject.component.html',\n  styleUrls: ['./reject.component.scss']\n})\nexport class RejectComponent implements OnInit {\n\n  reason: string ='The maximum file size you can upload is 100 GB or 12 hours';\nreply;\nconstructor(\n  public dialogRef: MatDialogRef<RejectComponent>,\n  @Inject(MAT_DIALOG_DATA) public data: any,\n  public services:ApproveService\n) {}\nstatus:boolean = false;\nreject(){\n  let data = {\n    name: this.data?.name,\n    category: this.data?.category,\n    price: this.data?.price,\n    description: this.data?.description,\n    status: 'rejected',\n    id:this.data?.id,\n    note: this.reason,\n  }\n  this.services.updateCourse(data).subscribe(res=>{\n    if(res){\n      this.status = true;\n    }\n  })\n}\n\nngOnInit(): void {\n\n}\n\n}\n","<div class=\"flex-row\">\n  <h2 class=\"title-holder-dialog flex-row align-items-center\">\n    Reject Course\n  </h2>\n  <h2 class=\"course-name-dialog flex-row align-items-center\">\n    {{data?.name}}\n  </h2>\n</div>\n\n<mat-dialog-content class=\"mat-typography\">\n  <label class=\"label-dialog\">Reason of Reject</label>\n\n  <mat-form-field class=\"w-100\" appearance=\"fill\">\n    <mat-label>Choose an Reason</mat-label>\n    <mat-select [(ngModel)]=\"reason\">\n      <mat-option value=\"The maximum file size you can upload is 100 GB or 12 hours\">The maximum file size you can upload is 100 GB or 12 hours</mat-option>\n      <mat-option value=\"Can't upload. Your status or account settings currently don't support uploads\" >\n        Can't upload. Your status or account settings currently don't support uploads\n      </mat-option>\n      <mat-option value=\"The file is empty or smaller than 2 KB\">\n        The file is empty or smaller than 2 KB\n      </mat-option>\n      <mat-option value=\"Daily upload limit reached\">Daily upload limit reached</mat-option>\n      <mat-option value=\"A security error has occurred\">\n        A security error has occurred\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\" >\n  <button class=\"btn-custom-dialog color-green mr-button\" [mat-dialog-close]='false'>\n    cancel\n  </button>\n  <button class=\"btn-custom-dialog color-primary\" (click)=\"reject()\" [mat-dialog-close] = 'status'>Reject</button>\n\n</mat-dialog-actions>\n\n","import { ApproveCoursesComponent } from './components/approve-courses/approve-courses.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'Approve-courses',component:ApproveCoursesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ApproveCourseRoutingModule { }\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, Input } from '@angular/core';\nimport videojs from 'video.js';\nimport 'videojs-vr/dist/videojs-vr.js';\n@Component({\n  selector: 'app-video-player',\n  templateUrl: './video-player.component.html',\n  styleUrls: ['./video-player.component.scss']\n})\nexport class VideoPlayerComponent implements OnInit, AfterViewInit{\n  @Input() Src;\n  @Input() poster;\n  private readonly config: any;\n  player;\n  @ViewChild('videoCourse') target: ElementRef;\n  constructor() {\n    this.config = {\n      controlBar: {\n        muteToggle: false,\n        replay: false,\n        muted:false\n      },\n      controls: true,\n      autoplay: false,\n      fluid: false,\n      loop: false,\n      plugin: {\n        panorama: {\n          clickAndDrag: true,\n          clickToToggle: true,\n          autoMobileOrientation: true,\n          backToVerticalCenter: false,\n          backToHorizonCenter: false\n        }\n      }\n\n    };\n  }\n  ngAfterViewInit(): void {\n    this.player = videojs(this.target.nativeElement, this.config, () => {\n      this.player.vr({projection: '360'});\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<video crossorigin=\"anonymous\" style=\"width: 100%; height: 120px;\" [poster]=\"poster\" #videoCourse  class=\"video-js vjs-default-skin vjs-big-play-centered custom-player\" controls muted playsinline preload=\"none\">\n  <source [src]=\"Src\" type=\"video/mp4\">\n</video>\n","import { VideoPlayerComponent } from './components/shared/video-player/video-player.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ApproveCourseRoutingModule } from './approve-course-routing.module';\nimport { ApproveCoursesComponent } from './components/approve-courses/approve-courses.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nimport { RejectComponent } from './components/dialogs/reject/reject.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [ApproveCoursesComponent,VideoPlayerComponent, RejectComponent],\n  imports: [\n    CommonModule,\n    ApproveCourseRoutingModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule\n  ]\n})\nexport class ApproveCourseModule { }\n","import { ApproveService } from './../../approve.service';\nimport { RejectComponent } from './../dialogs/reject/reject.component';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  ViewChildren,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppInitService } from 'src/app/service/app-init.service';\nimport { environment } from 'src/environments/environment';\nimport videojs from 'video.js';\nimport 'videojs-vr/dist/videojs-vr.js';\nexport interface COURSE {\n  id: any;\n  video: string;\n  name: string;\n  category: string;\n  uploader: string;\n  description?: string;\n  length: string;\n  price: number;\n  status: number;\n  poster?: string;\n}\n\n\n@Component({\n  selector: 'app-approve-courses',\n  templateUrl: './approve-courses.component.html',\n  styleUrls: ['./approve-courses.component.scss'],\n})\nexport class ApproveCoursesComponent implements OnInit, AfterViewInit {\n  displayedColumns: string[] = [\n    'video',\n    'name',\n    'category',\n    'uploader',\n    'length',\n    'price',\n    'status',\n    'opration',\n  ];\n  // dataSource = ELEMENT_DATA;\n  courses: COURSE[];\n  @ViewChildren('videoCourse') target: QueryList<any>;\n  // see options: https://github.com/videojs/video.js/blob/maintutorial-options.html\n  private readonly config: any;\n\n  options: {\n    fluid?: boolean;\n    aspectRatio?: string;\n    autoplay?: boolean;\n    controls: boolean;\n\n    sources: {\n      src: string;\n      type: string;\n    }[];\n    plugin: {\n      panorama: {\n        clickAndDrag: boolean;\n        clickToToggle: boolean;\n        autoMobileOrientation: boolean;\n        backToVerticalCenter: boolean;\n        backToHorizonCenter: boolean;\n      };\n    };\n  };\n  player;\n\n  constructor(\n    private elementRef: ElementRef,\n    public dialog: MatDialog,\n    public approveSrevice: ApproveService\n  ) {\n    this.config = {\n      controls: true,\n      autoplay: false,\n      fluid: false,\n      loop: false,\n      plugin: {\n        panorama: {\n          clickAndDrag: true,\n          clickToToggle: true,\n          autoMobileOrientation: true,\n          backToVerticalCenter: false,\n          backToHorizonCenter: false,\n        },\n      },\n    };\n    this.options = {\n      autoplay: true,\n      controls: true,\n      sources: [\n        { src: '../../../../../assets/videos/x.mp4', type: 'video/mp4' },\n      ],\n      plugin: {\n        panorama: {\n          clickAndDrag: true,\n          clickToToggle: true,\n          autoMobileOrientation: true,\n          backToVerticalCenter: false,\n          backToHorizonCenter: false,\n        },\n      },\n    };\n  }\n  src = '../../../../../assets/videos/x.mp4';\n  ngAfterViewInit(): void {\n    this.coursesList();\n    let data = this.target.toArray();\n    for (var i = 0; i < data.length; i++) {\n      console.log(data[i]);\n      this.player = videojs(data[i].nativeElement, this.config, () => {\n        // this.player.vr({projection: '360'});\n      });\n    }\n    // setup the player\n\n    // error handling\n    // this.player.on('error', (error) => {\n    //   console.warn(error);\n    // });\n  }\n\n  ngOnInit() {}\n  openReject(data) {\n    const dialogRef = this.dialog.open(RejectComponent, {\n      width: '550px',\n      panelClass: 'dialog-confirm-course',\n      data:data\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(result)\n      // if(result){\n        this.coursesList();\n      // }\n    });\n  }\n  coursesList(){\n    this.approveSrevice.courseList().subscribe((res) => {\n      let data = res.courses;\n      console.log(data, res);\n      this.courses = [];\n      for (let file of data) {\n        this.courses.push({\n          id: file?._id,\n          video: `${AppInitService.baseUrl}/${file?.file}`,\n          name: file?.name,\n          category: file?.category,\n          uploader: file?.owner?.firstName+' '+file?.owner?.lastName,\n          description: file?.description,\n          price: file?.price,\n          length: new Date(file?.length * 1000).toISOString().substr(14, 5),\n          status: this.convertStatus(file.status),\n          poster: `${AppInitService.baseUrl}/${file.thumbnail}`,\n        });\n      }\n    });\n  }\n  approve(video) {\n    let data = {\n      name: video?.name,\n      category: video?.category,\n      price: video?.price,\n      description: video?.description,\n      status: 'approved',\n      id: video.id,\n      note: video?.note,\n    };\n    this.approveSrevice.updateCourse(data).subscribe((res) => {\n      this.coursesList();\n    });\n  }\n  convertStatus(status): number {\n    let st;\n    switch (status) {\n      case 'pending':\n        st = 1;\n        break;\n      case 'approved':\n        st = 2;\n        break;\n      case 'rejected':\n        st = 3;\n        break;\n      default:\n        st = 1;\n        break;\n    }\n    return st;\n  }\n}\n","<div class=\"holder-content\">\n  <div class=\"component-container\">\n    <div class=\"holder-name-section\">\n      <p class=\"name-section\">Content Moderation</p>\n    </div>\n    <div class=\"holder-content-component silver-background\">\n      <table mat-table [dataSource]=\"courses\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"video\">\n          <th mat-header-cell *matHeaderCellDef> Video </th>\n          <td style=\"width: 300px;\" mat-cell *matCellDef=\"let element\">\n            <app-video-player [Src]=\"element.video\" [poster] = \"element.poster\"></app-video-player>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"category\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef> Category </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.category}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"uploader\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef> Uploader </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.uploader}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"length\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef> Length </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.length}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef> Price </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.price | currency:'':'':'2.0'}} (USD) </td>\n        </ng-container>\n        <ng-container matColumnDef=\"status\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef>Current Status </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <span class=\"status-chip pendding\" *ngIf=\"element.status === 1\">\n              Pending\n            </span>\n            <span class=\"status-chip approve\" *ngIf=\"element.status === 2\">Approved</span>\n            <span class=\"status-chip reject\" *ngIf=\"element.status === 3\">Rejected</span>\n\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"opration\">\n          <th class=\"txt-center\" mat-header-cell *matHeaderCellDef>Changing Status</th>\n          <td mat-cell *matCellDef=\"let element\">\n\n             <button mat-raised-button class=\"approve-btn\"\n              *ngIf=\"element.status===3 || element.status===1\" (click)=\"approve(element)\" >Approve</button>\n              <br *ngIf=\"element.status===1\" />\n              <button class=\"btn-table reject-btn\" mat-raised-button color=\"warn\" *ngIf=\"element.status===2 || element.status===1\" (click)=\" openReject(element)\">Reject</button>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}